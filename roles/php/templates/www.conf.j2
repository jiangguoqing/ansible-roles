{% raw %}; Start a new pool named 'www'.{% endraw %}

{% raw %}; Start a new pool named 'www'.{% endraw %}

{% raw %}; the variable $pool can be used in any directive and will be replaced by the{% endraw %}

{% raw %}; the variable $pool can be used in any directive and will be replaced by the{% endraw %}

{% raw %}; pool name ('www' here){% endraw %}

{% raw %}; pool name ('www' here){% endraw %}

[www]

{% raw %}; Per pool prefix{% endraw %}

{% raw %}; Per pool prefix{% endraw %}

{% raw %}; It only applies on the following directives:{% endraw %}

{% raw %}; It only applies on the following directives:{% endraw %}

{% raw %}; - 'access.log'{% endraw %}

{% raw %}; - 'access.log'{% endraw %}

{% raw %}; - 'slowlog'{% endraw %}

{% raw %}; - 'slowlog'{% endraw %}

{% raw %}; - 'listen' (unixsocket){% endraw %}

{% raw %}; - 'listen' (unixsocket){% endraw %}

{% raw %}; - 'chroot'{% endraw %}

{% raw %}; - 'chroot'{% endraw %}

{% raw %}; - 'chdir'{% endraw %}

{% raw %}; - 'chdir'{% endraw %}

{% raw %}; - 'php_values'{% endraw %}

{% raw %}; - 'php_values'{% endraw %}

{% raw %}; - 'php_admin_values'{% endraw %}

{% raw %}; - 'php_admin_values'{% endraw %}

{% raw %}; When not set, the global prefix (or /usr/local/php) applies instead.{% endraw %}

{% raw %}; When not set, the global prefix (or /usr/local/php) applies instead.{% endraw %}

{% raw %}; Note: This directive can also be relative to the global prefix.{% endraw %}

{% raw %}; Note: This directive can also be relative to the global prefix.{% endraw %}

{% raw %}; Default Value: none{% endraw %}

{% raw %}; Default Value: none{% endraw %}

{% raw %};prefix = /path/to/pools/$pool{% endraw %}

{% raw %};prefix = /path/to/pools/$pool{% endraw %}


{% raw %}; Unix user/group of processes{% endraw %}

{% raw %}; Unix user/group of processes{% endraw %}

{% raw %}; Note: The user is mandatory. If the group is not set, the default user's group{% endraw %}

{% raw %}; Note: The user is mandatory. If the group is not set, the default user's group{% endraw %}

{% raw %};       will be used.{% endraw %}

{% raw %};       will be used.{% endraw %}

user = {{ username }}
group = {{ groupname }}

{% raw %}; The address on which to accept FastCGI requests.{% endraw %}

{% raw %}; The address on which to accept FastCGI requests.{% endraw %}

{% raw %}; Valid syntaxes are:{% endraw %}

{% raw %}; Valid syntaxes are:{% endraw %}

{% raw %};   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on{% endraw %}

{% raw %};   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on{% endraw %}

{% raw %};                            a specific port;{% endraw %}

{% raw %};                            a specific port;{% endraw %}

{% raw %};   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on{% endraw %}

{% raw %};   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on{% endraw %}

{% raw %};                            a specific port;{% endraw %}

{% raw %};                            a specific port;{% endraw %}

{% raw %};   'port'                 - to listen on a TCP socket to all addresses{% endraw %}

{% raw %};   'port'                 - to listen on a TCP socket to all addresses{% endraw %}

{% raw %};                            (IPv6 and IPv4-mapped) on a specific port;{% endraw %}

{% raw %};                            (IPv6 and IPv4-mapped) on a specific port;{% endraw %}

{% raw %};   '/path/to/unix/socket' - to listen on a unix socket.{% endraw %}

{% raw %};   '/path/to/unix/socket' - to listen on a unix socket.{% endraw %}

{% raw %}; Note: This value is mandatory.{% endraw %}

{% raw %}; Note: This value is mandatory.{% endraw %}

listen = {{ listen_addr }}:{{ listen_port }}

{% raw %}; Set listen(2) backlog.{% endraw %}

{% raw %}; Set listen(2) backlog.{% endraw %}

{% raw %}; Default Value: 511 (-1 on FreeBSD and OpenBSD){% endraw %}

{% raw %}; Default Value: 511 (-1 on FreeBSD and OpenBSD){% endraw %}

{% raw %};listen.backlog = 511{% endraw %}

{% raw %};listen.backlog = 511{% endraw %}


{% raw %}; Set permissions for unix socket, if one is used. In Linux, read/write{% endraw %}

{% raw %}; Set permissions for unix socket, if one is used. In Linux, read/write{% endraw %}

{% raw %}; permissions must be set in order to allow connections from a web server. Many{% endraw %}

{% raw %}; permissions must be set in order to allow connections from a web server. Many{% endraw %}

{% raw %}; BSD-derived systems allow connections regardless of permissions.{% endraw %}

{% raw %}; BSD-derived systems allow connections regardless of permissions.{% endraw %}

{% raw %}; Default Values: user and group are set as the running user{% endraw %}

{% raw %}; Default Values: user and group are set as the running user{% endraw %}

{% raw %};                 mode is set to 0660{% endraw %}

{% raw %};                 mode is set to 0660{% endraw %}

{% raw %};listen.owner = www-data{% endraw %}

{% raw %};listen.owner = www-data{% endraw %}

{% raw %};listen.group = www-data{% endraw %}

{% raw %};listen.group = www-data{% endraw %}

{% raw %};listen.mode = 0660{% endraw %}

{% raw %};listen.mode = 0660{% endraw %}

{% raw %}; When POSIX Access Control Lists are supported you can set them using{% endraw %}

{% raw %}; When POSIX Access Control Lists are supported you can set them using{% endraw %}

{% raw %}; these options, value is a comma separated list of user/group names.{% endraw %}

{% raw %}; these options, value is a comma separated list of user/group names.{% endraw %}

{% raw %}; When set, listen.owner and listen.group are ignored{% endraw %}

{% raw %}; When set, listen.owner and listen.group are ignored{% endraw %}

{% raw %};listen.acl_users ={% endraw %}

{% raw %};listen.acl_users ={% endraw %}

{% raw %};listen.acl_groups ={% endraw %}

{% raw %};listen.acl_groups ={% endraw %}


{% raw %}; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.{% endraw %}

{% raw %}; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.{% endraw %}

{% raw %}; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original{% endraw %}

{% raw %}; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original{% endraw %}

{% raw %}; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address{% endraw %}

{% raw %}; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address{% endraw %}

{% raw %}; must be separated by a comma. If this value is left blank, connections will be{% endraw %}

{% raw %}; must be separated by a comma. If this value is left blank, connections will be{% endraw %}

{% raw %}; accepted from any ip address.{% endraw %}

{% raw %}; accepted from any ip address.{% endraw %}

{% raw %}; Default Value: any{% endraw %}

{% raw %}; Default Value: any{% endraw %}

{% raw %};listen.allowed_clients = 127.0.0.1{% endraw %}

{% raw %};listen.allowed_clients = 127.0.0.1{% endraw %}


{% raw %}; Specify the nice(2) priority to apply to the pool processes (only if set){% endraw %}

{% raw %}; Specify the nice(2) priority to apply to the pool processes (only if set){% endraw %}

{% raw %}; The value can vary from -19 (highest priority) to 20 (lower priority){% endraw %}

{% raw %}; The value can vary from -19 (highest priority) to 20 (lower priority){% endraw %}

{% raw %}; Note: - It will only work if the FPM master process is launched as root{% endraw %}

{% raw %}; Note: - It will only work if the FPM master process is launched as root{% endraw %}

{% raw %};       - The pool processes will inherit the master process priority{% endraw %}

{% raw %};       - The pool processes will inherit the master process priority{% endraw %}

{% raw %};         unless it specified otherwise{% endraw %}

{% raw %};         unless it specified otherwise{% endraw %}

{% raw %}; Default Value: no set{% endraw %}

{% raw %}; Default Value: no set{% endraw %}

{% raw %}; process.priority = -19{% endraw %}

{% raw %}; process.priority = -19{% endraw %}


{% raw %}; Set the process dumpable flag (PR_SET_DUMPABLE prctl) even if the process user{% endraw %}

{% raw %}; Set the process dumpable flag (PR_SET_DUMPABLE prctl) even if the process user{% endraw %}

{% raw %}; or group is differrent than the master process user. It allows to create process{% endraw %}

{% raw %}; or group is differrent than the master process user. It allows to create process{% endraw %}

{% raw %}; core dump and ptrace the process for the pool user.{% endraw %}

{% raw %}; core dump and ptrace the process for the pool user.{% endraw %}

{% raw %}; Default Value: no{% endraw %}

{% raw %}; Default Value: no{% endraw %}

{% raw %}; process.dumpable = yes{% endraw %}

{% raw %}; process.dumpable = yes{% endraw %}


{% raw %}; Choose how the process manager will control the number of child processes.{% endraw %}

{% raw %}; Choose how the process manager will control the number of child processes.{% endraw %}

{% raw %}; Possible Values:{% endraw %}

{% raw %}; Possible Values:{% endraw %}

{% raw %};   static  - a fixed number (pm.max_children) of child processes;{% endraw %}

{% raw %};   static  - a fixed number (pm.max_children) of child processes;{% endraw %}

{% raw %};   dynamic - the number of child processes are set dynamically based on the{% endraw %}

{% raw %};   dynamic - the number of child processes are set dynamically based on the{% endraw %}

{% raw %};             following directives. With this process management, there will be{% endraw %}

{% raw %};             following directives. With this process management, there will be{% endraw %}

{% raw %};             always at least 1 children.{% endraw %}

{% raw %};             always at least 1 children.{% endraw %}

{% raw %};             pm.max_children      - the maximum number of children that can{% endraw %}

{% raw %};             pm.max_children      - the maximum number of children that can{% endraw %}

{% raw %};                                    be alive at the same time.{% endraw %}

{% raw %};                                    be alive at the same time.{% endraw %}

{% raw %};             pm.start_servers     - the number of children created on startup.{% endraw %}

{% raw %};             pm.start_servers     - the number of children created on startup.{% endraw %}

{% raw %};             pm.min_spare_servers - the minimum number of children in 'idle'{% endraw %}

{% raw %};             pm.min_spare_servers - the minimum number of children in 'idle'{% endraw %}

{% raw %};                                    state (waiting to process). If the number{% endraw %}

{% raw %};                                    state (waiting to process). If the number{% endraw %}

{% raw %};                                    of 'idle' processes is less than this{% endraw %}

{% raw %};                                    of 'idle' processes is less than this{% endraw %}

{% raw %};                                    number then some children will be created.{% endraw %}

{% raw %};                                    number then some children will be created.{% endraw %}

{% raw %};             pm.max_spare_servers - the maximum number of children in 'idle'{% endraw %}

{% raw %};             pm.max_spare_servers - the maximum number of children in 'idle'{% endraw %}

{% raw %};                                    state (waiting to process). If the number{% endraw %}

{% raw %};                                    state (waiting to process). If the number{% endraw %}

{% raw %};                                    of 'idle' processes is greater than this{% endraw %}

{% raw %};                                    of 'idle' processes is greater than this{% endraw %}

{% raw %};                                    number then some children will be killed.{% endraw %}

{% raw %};                                    number then some children will be killed.{% endraw %}

{% raw %};  ondemand - no children are created at startup. Children will be forked when{% endraw %}

{% raw %};  ondemand - no children are created at startup. Children will be forked when{% endraw %}

{% raw %};             new requests will connect. The following parameter are used:{% endraw %}

{% raw %};             new requests will connect. The following parameter are used:{% endraw %}

{% raw %};             pm.max_children           - the maximum number of children that{% endraw %}

{% raw %};             pm.max_children           - the maximum number of children that{% endraw %}

{% raw %};                                         can be alive at the same time.{% endraw %}

{% raw %};                                         can be alive at the same time.{% endraw %}

{% raw %};             pm.process_idle_timeout   - The number of seconds after which{% endraw %}

{% raw %};             pm.process_idle_timeout   - The number of seconds after which{% endraw %}

{% raw %};                                         an idle process will be killed.{% endraw %}

{% raw %};                                         an idle process will be killed.{% endraw %}

{% raw %}; Note: This value is mandatory.{% endraw %}

{% raw %}; Note: This value is mandatory.{% endraw %}

pm = dynamic

{% raw %}; The number of child processes to be created when pm is set to 'static' and the{% endraw %}

{% raw %}; The number of child processes to be created when pm is set to 'static' and the{% endraw %}

{% raw %}; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.{% endraw %}

{% raw %}; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.{% endraw %}

{% raw %}; This value sets the limit on the number of simultaneous requests that will be{% endraw %}

{% raw %}; This value sets the limit on the number of simultaneous requests that will be{% endraw %}

{% raw %}; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.{% endraw %}

{% raw %}; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.{% endraw %}

{% raw %}; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP{% endraw %}

{% raw %}; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP{% endraw %}

{% raw %}; CGI. The below defaults are based on a server without much resources. Don't{% endraw %}

{% raw %}; CGI. The below defaults are based on a server without much resources. Don't{% endraw %}

{% raw %}; forget to tweak pm.* to fit your needs.{% endraw %}

{% raw %}; forget to tweak pm.* to fit your needs.{% endraw %}

{% raw %}; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'{% endraw %}

{% raw %}; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'{% endraw %}

{% raw %}; Note: This value is mandatory.{% endraw %}

{% raw %}; Note: This value is mandatory.{% endraw %}

pm.max_children = 5

{% raw %}; The number of child processes created on startup.{% endraw %}

{% raw %}; The number of child processes created on startup.{% endraw %}

{% raw %}; Note: Used only when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Used only when pm is set to 'dynamic'{% endraw %}

{% raw %}; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2{% endraw %}

{% raw %}; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2{% endraw %}

pm.start_servers = 2

{% raw %}; The desired minimum number of idle server processes.{% endraw %}

{% raw %}; The desired minimum number of idle server processes.{% endraw %}

{% raw %}; Note: Used only when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Used only when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Mandatory when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Mandatory when pm is set to 'dynamic'{% endraw %}

pm.min_spare_servers = 1

{% raw %}; The desired maximum number of idle server processes.{% endraw %}

{% raw %}; The desired maximum number of idle server processes.{% endraw %}

{% raw %}; Note: Used only when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Used only when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Mandatory when pm is set to 'dynamic'{% endraw %}

{% raw %}; Note: Mandatory when pm is set to 'dynamic'{% endraw %}

pm.max_spare_servers = 3

{% raw %}; The number of seconds after which an idle process will be killed.{% endraw %}

{% raw %}; The number of seconds after which an idle process will be killed.{% endraw %}

{% raw %}; Note: Used only when pm is set to 'ondemand'{% endraw %}

{% raw %}; Note: Used only when pm is set to 'ondemand'{% endraw %}

{% raw %}; Default Value: 10s{% endraw %}

{% raw %}; Default Value: 10s{% endraw %}

{% raw %};pm.process_idle_timeout = 10s;{% endraw %}

{% raw %};pm.process_idle_timeout = 10s;{% endraw %}


{% raw %}; The number of requests each child process should execute before respawning.{% endraw %}

{% raw %}; The number of requests each child process should execute before respawning.{% endraw %}

{% raw %}; This can be useful to work around memory leaks in 3rd party libraries. For{% endraw %}

{% raw %}; This can be useful to work around memory leaks in 3rd party libraries. For{% endraw %}

{% raw %}; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.{% endraw %}

{% raw %}; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.{% endraw %}

{% raw %}; Default Value: 0{% endraw %}

{% raw %}; Default Value: 0{% endraw %}

{% raw %};pm.max_requests = 500{% endraw %}

{% raw %};pm.max_requests = 500{% endraw %}


{% raw %}; The URI to view the FPM status page. If this value is not set, no URI will be{% endraw %}

{% raw %}; The URI to view the FPM status page. If this value is not set, no URI will be{% endraw %}

{% raw %}; recognized as a status page. It shows the following informations:{% endraw %}

{% raw %}; recognized as a status page. It shows the following informations:{% endraw %}

{% raw %};   pool                 - the name of the pool;{% endraw %}

{% raw %};   pool                 - the name of the pool;{% endraw %}

{% raw %};   process manager      - static, dynamic or ondemand;{% endraw %}

{% raw %};   process manager      - static, dynamic or ondemand;{% endraw %}

{% raw %};   start time           - the date and time FPM has started;{% endraw %}

{% raw %};   start time           - the date and time FPM has started;{% endraw %}

{% raw %};   start since          - number of seconds since FPM has started;{% endraw %}

{% raw %};   start since          - number of seconds since FPM has started;{% endraw %}

{% raw %};   accepted conn        - the number of request accepted by the pool;{% endraw %}

{% raw %};   accepted conn        - the number of request accepted by the pool;{% endraw %}

{% raw %};   listen queue         - the number of request in the queue of pending{% endraw %}

{% raw %};   listen queue         - the number of request in the queue of pending{% endraw %}

{% raw %};                          connections (see backlog in listen(2));{% endraw %}

{% raw %};                          connections (see backlog in listen(2));{% endraw %}

{% raw %};   max listen queue     - the maximum number of requests in the queue{% endraw %}

{% raw %};   max listen queue     - the maximum number of requests in the queue{% endraw %}

{% raw %};                          of pending connections since FPM has started;{% endraw %}

{% raw %};                          of pending connections since FPM has started;{% endraw %}

{% raw %};   listen queue len     - the size of the socket queue of pending connections;{% endraw %}

{% raw %};   listen queue len     - the size of the socket queue of pending connections;{% endraw %}

{% raw %};   idle processes       - the number of idle processes;{% endraw %}

{% raw %};   idle processes       - the number of idle processes;{% endraw %}

{% raw %};   active processes     - the number of active processes;{% endraw %}

{% raw %};   active processes     - the number of active processes;{% endraw %}

{% raw %};   total processes      - the number of idle + active processes;{% endraw %}

{% raw %};   total processes      - the number of idle + active processes;{% endraw %}

{% raw %};   max active processes - the maximum number of active processes since FPM{% endraw %}

{% raw %};   max active processes - the maximum number of active processes since FPM{% endraw %}

{% raw %};                          has started;{% endraw %}

{% raw %};                          has started;{% endraw %}

{% raw %};   max children reached - number of times, the process limit has been reached,{% endraw %}

{% raw %};   max children reached - number of times, the process limit has been reached,{% endraw %}

{% raw %};                          when pm tries to start more children (works only for{% endraw %}

{% raw %};                          when pm tries to start more children (works only for{% endraw %}

{% raw %};                          pm 'dynamic' and 'ondemand');{% endraw %}

{% raw %};                          pm 'dynamic' and 'ondemand');{% endraw %}

{% raw %}; Value are updated in real time.{% endraw %}

{% raw %}; Value are updated in real time.{% endraw %}

{% raw %}; Example output:{% endraw %}

{% raw %}; Example output:{% endraw %}

{% raw %};   pool:                 www{% endraw %}

{% raw %};   pool:                 www{% endraw %}

{% raw %};   process manager:      static{% endraw %}

{% raw %};   process manager:      static{% endraw %}

{% raw %};   start time:           01/Jul/2011:17:53:49 +0200{% endraw %}

{% raw %};   start time:           01/Jul/2011:17:53:49 +0200{% endraw %}

{% raw %};   start since:          62636{% endraw %}

{% raw %};   start since:          62636{% endraw %}

{% raw %};   accepted conn:        190460{% endraw %}

{% raw %};   accepted conn:        190460{% endraw %}

{% raw %};   listen queue:         0{% endraw %}

{% raw %};   listen queue:         0{% endraw %}

{% raw %};   max listen queue:     1{% endraw %}

{% raw %};   max listen queue:     1{% endraw %}

{% raw %};   listen queue len:     42{% endraw %}

{% raw %};   listen queue len:     42{% endraw %}

{% raw %};   idle processes:       4{% endraw %}

{% raw %};   idle processes:       4{% endraw %}

{% raw %};   active processes:     11{% endraw %}

{% raw %};   active processes:     11{% endraw %}

{% raw %};   total processes:      15{% endraw %}

{% raw %};   total processes:      15{% endraw %}

{% raw %};   max active processes: 12{% endraw %}

{% raw %};   max active processes: 12{% endraw %}

{% raw %};   max children reached: 0{% endraw %}

{% raw %};   max children reached: 0{% endraw %}

{% raw %};{% endraw %}

{% raw %};{% endraw %}

{% raw %}; By default the status page output is formatted as text/plain. Passing either{% endraw %}

{% raw %}; By default the status page output is formatted as text/plain. Passing either{% endraw %}

{% raw %}; 'html', 'xml' or 'json' in the query string will return the corresponding{% endraw %}

{% raw %}; 'html', 'xml' or 'json' in the query string will return the corresponding{% endraw %}

{% raw %}; output syntax. Example:{% endraw %}

{% raw %}; output syntax. Example:{% endraw %}

{% raw %};   http://www.foo.bar/status{% endraw %}

{% raw %};   http://www.foo.bar/status{% endraw %}

{% raw %};   http://www.foo.bar/status?json{% endraw %}

{% raw %};   http://www.foo.bar/status?json{% endraw %}

{% raw %};   http://www.foo.bar/status?html{% endraw %}

{% raw %};   http://www.foo.bar/status?html{% endraw %}

{% raw %};   http://www.foo.bar/status?xml{% endraw %}

{% raw %};   http://www.foo.bar/status?xml{% endraw %}

{% raw %};{% endraw %}

{% raw %};{% endraw %}

{% raw %}; By default the status page only outputs short status. Passing 'full' in the{% endraw %}

{% raw %}; By default the status page only outputs short status. Passing 'full' in the{% endraw %}

{% raw %}; query string will also return status for each pool process.{% endraw %}

{% raw %}; query string will also return status for each pool process.{% endraw %}

{% raw %}; Example:{% endraw %}

{% raw %}; Example:{% endraw %}

{% raw %};   http://www.foo.bar/status?full{% endraw %}

{% raw %};   http://www.foo.bar/status?full{% endraw %}

{% raw %};   http://www.foo.bar/status?json&full{% endraw %}

{% raw %};   http://www.foo.bar/status?json&full{% endraw %}

{% raw %};   http://www.foo.bar/status?html&full{% endraw %}

{% raw %};   http://www.foo.bar/status?html&full{% endraw %}

{% raw %};   http://www.foo.bar/status?xml&full{% endraw %}

{% raw %};   http://www.foo.bar/status?xml&full{% endraw %}

{% raw %}; The Full status returns for each process:{% endraw %}

{% raw %}; The Full status returns for each process:{% endraw %}

{% raw %};   pid                  - the PID of the process;{% endraw %}

{% raw %};   pid                  - the PID of the process;{% endraw %}

{% raw %};   state                - the state of the process (Idle, Running, ...);{% endraw %}

{% raw %};   state                - the state of the process (Idle, Running, ...);{% endraw %}

{% raw %};   start time           - the date and time the process has started;{% endraw %}

{% raw %};   start time           - the date and time the process has started;{% endraw %}

{% raw %};   start since          - the number of seconds since the process has started;{% endraw %}

{% raw %};   start since          - the number of seconds since the process has started;{% endraw %}

{% raw %};   requests             - the number of requests the process has served;{% endraw %}

{% raw %};   requests             - the number of requests the process has served;{% endraw %}

{% raw %};   request duration     - the duration in µs of the requests;{% endraw %}

{% raw %};   request duration     - the duration in µs of the requests;{% endraw %}

{% raw %};   request method       - the request method (GET, POST, ...);{% endraw %}

{% raw %};   request method       - the request method (GET, POST, ...);{% endraw %}

{% raw %};   request URI          - the request URI with the query string;{% endraw %}

{% raw %};   request URI          - the request URI with the query string;{% endraw %}

{% raw %};   content length       - the content length of the request (only with POST);{% endraw %}

{% raw %};   content length       - the content length of the request (only with POST);{% endraw %}

{% raw %};   user                 - the user (PHP_AUTH_USER) (or '-' if not set);{% endraw %}

{% raw %};   user                 - the user (PHP_AUTH_USER) (or '-' if not set);{% endraw %}

{% raw %};   script               - the main script called (or '-' if not set);{% endraw %}

{% raw %};   script               - the main script called (or '-' if not set);{% endraw %}

{% raw %};   last request cpu     - the %cpu the last request consumed{% endraw %}

{% raw %};   last request cpu     - the %cpu the last request consumed{% endraw %}

{% raw %};                          it's always 0 if the process is not in Idle state{% endraw %}

{% raw %};                          it's always 0 if the process is not in Idle state{% endraw %}

{% raw %};                          because CPU calculation is done when the request{% endraw %}

{% raw %};                          because CPU calculation is done when the request{% endraw %}

{% raw %};                          processing has terminated;{% endraw %}

{% raw %};                          processing has terminated;{% endraw %}

{% raw %};   last request memory  - the max amount of memory the last request consumed{% endraw %}

{% raw %};   last request memory  - the max amount of memory the last request consumed{% endraw %}

{% raw %};                          it's always 0 if the process is not in Idle state{% endraw %}

{% raw %};                          it's always 0 if the process is not in Idle state{% endraw %}

{% raw %};                          because memory calculation is done when the request{% endraw %}

{% raw %};                          because memory calculation is done when the request{% endraw %}

{% raw %};                          processing has terminated;{% endraw %}

{% raw %};                          processing has terminated;{% endraw %}

{% raw %}; If the process is in Idle state, then informations are related to the{% endraw %}

{% raw %}; If the process is in Idle state, then informations are related to the{% endraw %}

{% raw %}; last request the process has served. Otherwise informations are related to{% endraw %}

{% raw %}; last request the process has served. Otherwise informations are related to{% endraw %}

{% raw %}; the current request being served.{% endraw %}

{% raw %}; the current request being served.{% endraw %}

{% raw %}; Example output:{% endraw %}

{% raw %}; Example output:{% endraw %}

{% raw %};   ************************{% endraw %}

{% raw %};   ************************{% endraw %}

{% raw %};   pid:                  31330{% endraw %}

{% raw %};   pid:                  31330{% endraw %}

{% raw %};   state:                Running{% endraw %}

{% raw %};   state:                Running{% endraw %}

{% raw %};   start time:           01/Jul/2011:17:53:49 +0200{% endraw %}

{% raw %};   start time:           01/Jul/2011:17:53:49 +0200{% endraw %}

{% raw %};   start since:          63087{% endraw %}

{% raw %};   start since:          63087{% endraw %}

{% raw %};   requests:             12808{% endraw %}

{% raw %};   requests:             12808{% endraw %}

{% raw %};   request duration:     1250261{% endraw %}

{% raw %};   request duration:     1250261{% endraw %}

{% raw %};   request method:       GET{% endraw %}

{% raw %};   request method:       GET{% endraw %}

{% raw %};   request URI:          /test_mem.php?N=10000{% endraw %}

{% raw %};   request URI:          /test_mem.php?N=10000{% endraw %}

{% raw %};   content length:       0{% endraw %}

{% raw %};   content length:       0{% endraw %}

{% raw %};   user:                 -{% endraw %}

{% raw %};   user:                 -{% endraw %}

{% raw %};   script:               /home/fat/web/docs/php/test_mem.php{% endraw %}

{% raw %};   script:               /home/fat/web/docs/php/test_mem.php{% endraw %}

{% raw %};   last request cpu:     0.00{% endraw %}

{% raw %};   last request cpu:     0.00{% endraw %}

{% raw %};   last request memory:  0{% endraw %}

{% raw %};   last request memory:  0{% endraw %}

{% raw %};{% endraw %}

{% raw %};{% endraw %}

{% raw %}; Note: There is a real-time FPM status monitoring sample web page available{% endraw %}

{% raw %}; Note: There is a real-time FPM status monitoring sample web page available{% endraw %}

{% raw %};       It's available in: /usr/local/php/share/php/fpm/status.html{% endraw %}

{% raw %};       It's available in: /usr/local/php/share/php/fpm/status.html{% endraw %}

{% raw %};{% endraw %}

{% raw %};{% endraw %}

{% raw %}; Note: The value must start with a leading slash (/). The value can be{% endraw %}

{% raw %}; Note: The value must start with a leading slash (/). The value can be{% endraw %}

{% raw %};       anything, but it may not be a good idea to use the .php extension or it{% endraw %}

{% raw %};       anything, but it may not be a good idea to use the .php extension or it{% endraw %}

{% raw %};       may conflict with a real PHP file.{% endraw %}

{% raw %};       may conflict with a real PHP file.{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %};pm.status_path = /status{% endraw %}

{% raw %};pm.status_path = /status{% endraw %}


{% raw %}; The ping URI to call the monitoring page of FPM. If this value is not set, no{% endraw %}

{% raw %}; The ping URI to call the monitoring page of FPM. If this value is not set, no{% endraw %}

{% raw %}; URI will be recognized as a ping page. This could be used to test from outside{% endraw %}

{% raw %}; URI will be recognized as a ping page. This could be used to test from outside{% endraw %}

{% raw %}; that FPM is alive and responding, or to{% endraw %}

{% raw %}; that FPM is alive and responding, or to{% endraw %}

{% raw %}; - create a graph of FPM availability (rrd or such);{% endraw %}

{% raw %}; - create a graph of FPM availability (rrd or such);{% endraw %}

{% raw %}; - remove a server from a group if it is not responding (load balancing);{% endraw %}

{% raw %}; - remove a server from a group if it is not responding (load balancing);{% endraw %}

{% raw %}; - trigger alerts for the operating team (24/7).{% endraw %}

{% raw %}; - trigger alerts for the operating team (24/7).{% endraw %}

{% raw %}; Note: The value must start with a leading slash (/). The value can be{% endraw %}

{% raw %}; Note: The value must start with a leading slash (/). The value can be{% endraw %}

{% raw %};       anything, but it may not be a good idea to use the .php extension or it{% endraw %}

{% raw %};       anything, but it may not be a good idea to use the .php extension or it{% endraw %}

{% raw %};       may conflict with a real PHP file.{% endraw %}

{% raw %};       may conflict with a real PHP file.{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %};ping.path = /ping{% endraw %}

{% raw %};ping.path = /ping{% endraw %}


{% raw %}; This directive may be used to customize the response of a ping request. The{% endraw %}

{% raw %}; This directive may be used to customize the response of a ping request. The{% endraw %}

{% raw %}; response is formatted as text/plain with a 200 response code.{% endraw %}

{% raw %}; response is formatted as text/plain with a 200 response code.{% endraw %}

{% raw %}; Default Value: pong{% endraw %}

{% raw %}; Default Value: pong{% endraw %}

{% raw %};ping.response = pong{% endraw %}

{% raw %};ping.response = pong{% endraw %}


{% raw %}; The access log file{% endraw %}

{% raw %}; The access log file{% endraw %}

{% raw %}; Default: not set{% endraw %}

{% raw %}; Default: not set{% endraw %}

{% raw %};access.log = log/$pool.access.log{% endraw %}

{% raw %};access.log = log/$pool.access.log{% endraw %}


{% raw %}; The access log format.{% endraw %}

{% raw %}; The access log format.{% endraw %}

{% raw %}; The following syntax is allowed{% endraw %}

{% raw %}; The following syntax is allowed{% endraw %}

{% raw %};  %%: the '%' character{% endraw %}

{% raw %};  %%: the '%' character{% endraw %}

{% raw %};  %C: %CPU used by the request{% endraw %}

{% raw %};  %C: %CPU used by the request{% endraw %}

{% raw %};      it can accept the following format:{% endraw %}

{% raw %};      it can accept the following format:{% endraw %}

{% raw %};      - %{user}C for user CPU only{% endraw %}

{% raw %};      - %{user}C for user CPU only{% endraw %}

{% raw %};      - %{system}C for system CPU only{% endraw %}

{% raw %};      - %{system}C for system CPU only{% endraw %}

{% raw %};      - %{total}C  for user + system CPU (default){% endraw %}

{% raw %};      - %{total}C  for user + system CPU (default){% endraw %}

{% raw %};  %d: time taken to serve the request{% endraw %}

{% raw %};  %d: time taken to serve the request{% endraw %}

{% raw %};      it can accept the following format:{% endraw %}

{% raw %};      it can accept the following format:{% endraw %}

{% raw %};      - %{seconds}d (default){% endraw %}

{% raw %};      - %{seconds}d (default){% endraw %}

{% raw %};      - %{miliseconds}d{% endraw %}

{% raw %};      - %{miliseconds}d{% endraw %}

{% raw %};      - %{mili}d{% endraw %}

{% raw %};      - %{mili}d{% endraw %}

{% raw %};      - %{microseconds}d{% endraw %}

{% raw %};      - %{microseconds}d{% endraw %}

{% raw %};      - %{micro}d{% endraw %}

{% raw %};      - %{micro}d{% endraw %}

{% raw %};  %e: an environment variable (same as $_ENV or $_SERVER){% endraw %}

{% raw %};  %e: an environment variable (same as $_ENV or $_SERVER){% endraw %}

{% raw %};      it must be associated with embraces to specify the name of the env{% endraw %}

{% raw %};      it must be associated with embraces to specify the name of the env{% endraw %}

{% raw %};      variable. Some exemples:{% endraw %}

{% raw %};      variable. Some exemples:{% endraw %}

{% raw %};      - server specifics like: %{REQUEST_METHOD}e or %{SERVER_PROTOCOL}e{% endraw %}

{% raw %};      - server specifics like: %{REQUEST_METHOD}e or %{SERVER_PROTOCOL}e{% endraw %}

{% raw %};      - HTTP headers like: %{HTTP_HOST}e or %{HTTP_USER_AGENT}e{% endraw %}

{% raw %};      - HTTP headers like: %{HTTP_HOST}e or %{HTTP_USER_AGENT}e{% endraw %}

{% raw %};  %f: script filename{% endraw %}

{% raw %};  %f: script filename{% endraw %}

{% raw %};  %l: content-length of the request (for POST request only){% endraw %}

{% raw %};  %l: content-length of the request (for POST request only){% endraw %}

{% raw %};  %m: request method{% endraw %}

{% raw %};  %m: request method{% endraw %}

{% raw %};  %M: peak of memory allocated by PHP{% endraw %}

{% raw %};  %M: peak of memory allocated by PHP{% endraw %}

{% raw %};      it can accept the following format:{% endraw %}

{% raw %};      it can accept the following format:{% endraw %}

{% raw %};      - %{bytes}M (default){% endraw %}

{% raw %};      - %{bytes}M (default){% endraw %}

{% raw %};      - %{kilobytes}M{% endraw %}

{% raw %};      - %{kilobytes}M{% endraw %}

{% raw %};      - %{kilo}M{% endraw %}

{% raw %};      - %{kilo}M{% endraw %}

{% raw %};      - %{megabytes}M{% endraw %}

{% raw %};      - %{megabytes}M{% endraw %}

{% raw %};      - %{mega}M{% endraw %}

{% raw %};      - %{mega}M{% endraw %}

{% raw %};  %n: pool name{% endraw %}

{% raw %};  %n: pool name{% endraw %}

{% raw %};  %o: output header{% endraw %}

{% raw %};  %o: output header{% endraw %}

{% raw %};      it must be associated with embraces to specify the name of the header:{% endraw %}

{% raw %};      it must be associated with embraces to specify the name of the header:{% endraw %}

{% raw %};      - %{Content-Type}o{% endraw %}

{% raw %};      - %{Content-Type}o{% endraw %}

{% raw %};      - %{X-Powered-By}o{% endraw %}

{% raw %};      - %{X-Powered-By}o{% endraw %}

{% raw %};      - %{Transfert-Encoding}o{% endraw %}

{% raw %};      - %{Transfert-Encoding}o{% endraw %}

{% raw %};      - ....{% endraw %}

{% raw %};      - ....{% endraw %}

{% raw %};  %p: PID of the child that serviced the request{% endraw %}

{% raw %};  %p: PID of the child that serviced the request{% endraw %}

{% raw %};  %P: PID of the parent of the child that serviced the request{% endraw %}

{% raw %};  %P: PID of the parent of the child that serviced the request{% endraw %}

{% raw %};  %q: the query string{% endraw %}

{% raw %};  %q: the query string{% endraw %}

{% raw %};  %Q: the '?' character if query string exists{% endraw %}

{% raw %};  %Q: the '?' character if query string exists{% endraw %}

{% raw %};  %r: the request URI (without the query string, see %q and %Q){% endraw %}

{% raw %};  %r: the request URI (without the query string, see %q and %Q){% endraw %}

{% raw %};  %R: remote IP address{% endraw %}

{% raw %};  %R: remote IP address{% endraw %}

{% raw %};  %s: status (response code){% endraw %}

{% raw %};  %s: status (response code){% endraw %}

{% raw %};  %t: server time the request was received{% endraw %}

{% raw %};  %t: server time the request was received{% endraw %}

{% raw %};      it can accept a strftime(3) format:{% endraw %}

{% raw %};      it can accept a strftime(3) format:{% endraw %}

{% raw %};      %d/%b/%Y:%H:%M:%S %z (default){% endraw %}

{% raw %};      %d/%b/%Y:%H:%M:%S %z (default){% endraw %}

{% raw %};      The strftime(3) format must be encapsuled in a %{<strftime_format>}t tag{% endraw %}

{% raw %};      The strftime(3) format must be encapsuled in a %{<strftime_format>}t tag{% endraw %}

{% raw %};      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t{% endraw %}

{% raw %};      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t{% endraw %}

{% raw %};  %T: time the log has been written (the request has finished){% endraw %}

{% raw %};  %T: time the log has been written (the request has finished){% endraw %}

{% raw %};      it can accept a strftime(3) format:{% endraw %}

{% raw %};      it can accept a strftime(3) format:{% endraw %}

{% raw %};      %d/%b/%Y:%H:%M:%S %z (default){% endraw %}

{% raw %};      %d/%b/%Y:%H:%M:%S %z (default){% endraw %}

{% raw %};      The strftime(3) format must be encapsuled in a %{<strftime_format>}t tag{% endraw %}

{% raw %};      The strftime(3) format must be encapsuled in a %{<strftime_format>}t tag{% endraw %}

{% raw %};      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t{% endraw %}

{% raw %};      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t{% endraw %}

{% raw %};  %u: remote user{% endraw %}

{% raw %};  %u: remote user{% endraw %}

{% raw %};{% endraw %}

{% raw %};{% endraw %}

{% raw %}; Default: "%R - %u %t \"%m %r\" %s"{% endraw %}

{% raw %}; Default: "%R - %u %t \"%m %r\" %s"{% endraw %}

{% raw %};access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"{% endraw %}

{% raw %};access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"{% endraw %}


{% raw %}; The log file for slow requests{% endraw %}

{% raw %}; The log file for slow requests{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %}; Note: slowlog is mandatory if request_slowlog_timeout is set{% endraw %}

{% raw %}; Note: slowlog is mandatory if request_slowlog_timeout is set{% endraw %}

{% raw %};slowlog = log/$pool.log.slow{% endraw %}

{% raw %};slowlog = log/$pool.log.slow{% endraw %}


{% raw %}; The timeout for serving a single request after which a PHP backtrace will be{% endraw %}

{% raw %}; The timeout for serving a single request after which a PHP backtrace will be{% endraw %}

{% raw %}; dumped to the 'slowlog' file. A value of '0s' means 'off'.{% endraw %}

{% raw %}; dumped to the 'slowlog' file. A value of '0s' means 'off'.{% endraw %}

{% raw %}; Available units: s(econds)(default), m(inutes), h(ours), or d(ays){% endraw %}

{% raw %}; Available units: s(econds)(default), m(inutes), h(ours), or d(ays){% endraw %}

{% raw %}; Default Value: 0{% endraw %}

{% raw %}; Default Value: 0{% endraw %}

{% raw %};request_slowlog_timeout = 0{% endraw %}

{% raw %};request_slowlog_timeout = 0{% endraw %}


{% raw %}; Depth of slow log stack trace.{% endraw %}

{% raw %}; Depth of slow log stack trace.{% endraw %}

{% raw %}; Default Value: 20{% endraw %}

{% raw %}; Default Value: 20{% endraw %}

{% raw %};request_slowlog_trace_depth = 20{% endraw %}

{% raw %};request_slowlog_trace_depth = 20{% endraw %}


{% raw %}; The timeout for serving a single request after which the worker process will{% endraw %}

{% raw %}; The timeout for serving a single request after which the worker process will{% endraw %}

{% raw %}; be killed. This option should be used when the 'max_execution_time' ini option{% endraw %}

{% raw %}; be killed. This option should be used when the 'max_execution_time' ini option{% endraw %}

{% raw %}; does not stop script execution for some reason. A value of '0' means 'off'.{% endraw %}

{% raw %}; does not stop script execution for some reason. A value of '0' means 'off'.{% endraw %}

{% raw %}; Available units: s(econds)(default), m(inutes), h(ours), or d(ays){% endraw %}

{% raw %}; Available units: s(econds)(default), m(inutes), h(ours), or d(ays){% endraw %}

{% raw %}; Default Value: 0{% endraw %}

{% raw %}; Default Value: 0{% endraw %}

{% raw %};request_terminate_timeout = 0{% endraw %}

{% raw %};request_terminate_timeout = 0{% endraw %}


{% raw %}; Set open file descriptor rlimit.{% endraw %}

{% raw %}; Set open file descriptor rlimit.{% endraw %}

{% raw %}; Default Value: system defined value{% endraw %}

{% raw %}; Default Value: system defined value{% endraw %}

{% raw %};rlimit_files = 1024{% endraw %}

{% raw %};rlimit_files = 1024{% endraw %}


{% raw %}; Set max core size rlimit.{% endraw %}

{% raw %}; Set max core size rlimit.{% endraw %}

{% raw %}; Possible Values: 'unlimited' or an integer greater or equal to 0{% endraw %}

{% raw %}; Possible Values: 'unlimited' or an integer greater or equal to 0{% endraw %}

{% raw %}; Default Value: system defined value{% endraw %}

{% raw %}; Default Value: system defined value{% endraw %}

{% raw %};rlimit_core = 0{% endraw %}

{% raw %};rlimit_core = 0{% endraw %}


{% raw %}; Chroot to this directory at the start. This value must be defined as an{% endraw %}

{% raw %}; Chroot to this directory at the start. This value must be defined as an{% endraw %}

{% raw %}; absolute path. When this value is not set, chroot is not used.{% endraw %}

{% raw %}; absolute path. When this value is not set, chroot is not used.{% endraw %}

{% raw %}; Note: you can prefix with '$prefix' to chroot to the pool prefix or one{% endraw %}

{% raw %}; Note: you can prefix with '$prefix' to chroot to the pool prefix or one{% endraw %}

{% raw %}; of its subdirectories. If the pool prefix is not set, the global prefix{% endraw %}

{% raw %}; of its subdirectories. If the pool prefix is not set, the global prefix{% endraw %}

{% raw %}; will be used instead.{% endraw %}

{% raw %}; will be used instead.{% endraw %}

{% raw %}; Note: chrooting is a great security feature and should be used whenever{% endraw %}

{% raw %}; Note: chrooting is a great security feature and should be used whenever{% endraw %}

{% raw %};       possible. However, all PHP paths will be relative to the chroot{% endraw %}

{% raw %};       possible. However, all PHP paths will be relative to the chroot{% endraw %}

{% raw %};       (error_log, sessions.save_path, ...).{% endraw %}

{% raw %};       (error_log, sessions.save_path, ...).{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %}; Default Value: not set{% endraw %}

{% raw %};chroot ={% endraw %}

{% raw %};chroot ={% endraw %}


{% raw %}; Chdir to this directory at the start.{% endraw %}

{% raw %}; Chdir to this directory at the start.{% endraw %}

{% raw %}; Note: relative path can be used.{% endraw %}

{% raw %}; Note: relative path can be used.{% endraw %}

{% raw %}; Default Value: current directory or / when chroot{% endraw %}

{% raw %}; Default Value: current directory or / when chroot{% endraw %}

{% raw %};chdir = /var/www{% endraw %}

{% raw %};chdir = /var/www{% endraw %}


{% raw %}; Redirect worker stdout and stderr into main error log. If not set, stdout and{% endraw %}

{% raw %}; Redirect worker stdout and stderr into main error log. If not set, stdout and{% endraw %}

{% raw %}; stderr will be redirected to /dev/null according to FastCGI specs.{% endraw %}

{% raw %}; stderr will be redirected to /dev/null according to FastCGI specs.{% endraw %}

{% raw %}; Note: on highloaded environement, this can cause some delay in the page{% endraw %}

{% raw %}; Note: on highloaded environement, this can cause some delay in the page{% endraw %}

{% raw %}; process time (several ms).{% endraw %}

{% raw %}; process time (several ms).{% endraw %}

{% raw %}; Default Value: no{% endraw %}

{% raw %}; Default Value: no{% endraw %}

{% raw %};catch_workers_output = yes{% endraw %}

{% raw %};catch_workers_output = yes{% endraw %}


{% raw %}; Clear environment in FPM workers{% endraw %}

{% raw %}; Clear environment in FPM workers{% endraw %}

{% raw %}; Prevents arbitrary environment variables from reaching FPM worker processes{% endraw %}

{% raw %}; Prevents arbitrary environment variables from reaching FPM worker processes{% endraw %}

{% raw %}; by clearing the environment in workers before env vars specified in this{% endraw %}

{% raw %}; by clearing the environment in workers before env vars specified in this{% endraw %}

{% raw %}; pool configuration are added.{% endraw %}

{% raw %}; pool configuration are added.{% endraw %}

{% raw %}; Setting to "no" will make all environment variables available to PHP code{% endraw %}

{% raw %}; Setting to "no" will make all environment variables available to PHP code{% endraw %}

{% raw %}; via getenv(), $_ENV and $_SERVER.{% endraw %}

{% raw %}; via getenv(), $_ENV and $_SERVER.{% endraw %}

{% raw %}; Default Value: yes{% endraw %}

{% raw %}; Default Value: yes{% endraw %}

{% raw %};clear_env = no{% endraw %}

{% raw %};clear_env = no{% endraw %}


{% raw %}; Limits the extensions of the main script FPM will allow to parse. This can{% endraw %}

{% raw %}; Limits the extensions of the main script FPM will allow to parse. This can{% endraw %}

{% raw %}; prevent configuration mistakes on the web server side. You should only limit{% endraw %}

{% raw %}; prevent configuration mistakes on the web server side. You should only limit{% endraw %}

{% raw %}; FPM to .php extensions to prevent malicious users to use other extensions to{% endraw %}

{% raw %}; FPM to .php extensions to prevent malicious users to use other extensions to{% endraw %}

{% raw %}; execute php code.{% endraw %}

{% raw %}; execute php code.{% endraw %}

{% raw %}; Note: set an empty value to allow all extensions.{% endraw %}

{% raw %}; Note: set an empty value to allow all extensions.{% endraw %}

{% raw %}; Default Value: .php{% endraw %}

{% raw %}; Default Value: .php{% endraw %}

{% raw %};security.limit_extensions = .php .php3 .php4 .php5 .php7{% endraw %}

{% raw %};security.limit_extensions = .php .php3 .php4 .php5 .php7{% endraw %}


{% raw %}; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from{% endraw %}

{% raw %}; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from{% endraw %}

{% raw %}; the current environment.{% endraw %}

{% raw %}; the current environment.{% endraw %}

{% raw %}; Default Value: clean env{% endraw %}

{% raw %}; Default Value: clean env{% endraw %}

{% raw %};env[HOSTNAME] = $HOSTNAME{% endraw %}

{% raw %};env[HOSTNAME] = $HOSTNAME{% endraw %}

{% raw %};env[PATH] = /usr/local/bin:/usr/bin:/bin{% endraw %}

{% raw %};env[PATH] = /usr/local/bin:/usr/bin:/bin{% endraw %}

{% raw %};env[TMP] = /tmp{% endraw %}

{% raw %};env[TMP] = /tmp{% endraw %}

{% raw %};env[TMPDIR] = /tmp{% endraw %}

{% raw %};env[TMPDIR] = /tmp{% endraw %}

{% raw %};env[TEMP] = /tmp{% endraw %}

{% raw %};env[TEMP] = /tmp{% endraw %}


{% raw %}; Additional php.ini defines, specific to this pool of workers. These settings{% endraw %}

{% raw %}; Additional php.ini defines, specific to this pool of workers. These settings{% endraw %}

{% raw %}; overwrite the values previously defined in the php.ini. The directives are the{% endraw %}

{% raw %}; overwrite the values previously defined in the php.ini. The directives are the{% endraw %}

{% raw %}; same as the PHP SAPI:{% endraw %}

{% raw %}; same as the PHP SAPI:{% endraw %}

{% raw %};   php_value/php_flag             - you can set classic ini defines which can{% endraw %}

{% raw %};   php_value/php_flag             - you can set classic ini defines which can{% endraw %}

{% raw %};                                    be overwritten from PHP call 'ini_set'.{% endraw %}

{% raw %};                                    be overwritten from PHP call 'ini_set'.{% endraw %}

{% raw %};   php_admin_value/php_admin_flag - these directives won't be overwritten by{% endraw %}

{% raw %};   php_admin_value/php_admin_flag - these directives won't be overwritten by{% endraw %}

{% raw %};                                     PHP call 'ini_set'{% endraw %}

{% raw %};                                     PHP call 'ini_set'{% endraw %}

{% raw %}; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.{% endraw %}

{% raw %}; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.{% endraw %}


{% raw %}; Defining 'extension' will load the corresponding shared extension from{% endraw %}

{% raw %}; Defining 'extension' will load the corresponding shared extension from{% endraw %}

{% raw %}; extension_dir. Defining 'disable_functions' or 'disable_classes' will not{% endraw %}

{% raw %}; extension_dir. Defining 'disable_functions' or 'disable_classes' will not{% endraw %}

{% raw %}; overwrite previously defined php.ini values, but will append the new value{% endraw %}

{% raw %}; overwrite previously defined php.ini values, but will append the new value{% endraw %}

{% raw %}; instead.{% endraw %}

{% raw %}; instead.{% endraw %}


{% raw %}; Note: path INI options can be relative and will be expanded with the prefix{% endraw %}

{% raw %}; Note: path INI options can be relative and will be expanded with the prefix{% endraw %}

{% raw %}; (pool, global or /usr/local/php){% endraw %}

{% raw %}; (pool, global or /usr/local/php){% endraw %}


{% raw %}; Default Value: nothing is defined by default except the values in php.ini and{% endraw %}

{% raw %}; Default Value: nothing is defined by default except the values in php.ini and{% endraw %}

{% raw %};                specified at startup with the -d argument{% endraw %}

{% raw %};                specified at startup with the -d argument{% endraw %}

{% raw %};php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com{% endraw %}

{% raw %};php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com{% endraw %}

{% raw %};php_flag[display_errors] = off{% endraw %}

{% raw %};php_flag[display_errors] = off{% endraw %}

{% raw %};php_admin_value[error_log] = /var/log/fpm-php.www.log{% endraw %}

{% raw %};php_admin_value[error_log] = /var/log/fpm-php.www.log{% endraw %}

{% raw %};php_admin_flag[log_errors] = on{% endraw %}

{% raw %};php_admin_flag[log_errors] = on{% endraw %}

{% raw %};php_admin_value[memory_limit] = 32M{% endraw %}

{% raw %};php_admin_value[memory_limit] = 32M{% endraw %}

